In python, a stack is a linear data structure that follows the Last-In-First_Out (LIFO) principle.
Elements are added and removed from the same end of the stack, called the "top". 
Python doesn't have a built-in stack data structure, but you can easily implement a stack using lists.

Common Stack Methods:

append(x): Add an element x to the top of the stack (push operation).

pop(): Remove and return the top element from the stack (pop operation).

[-1]: Access the top element of the stack without removing it (peek operation).


General List Functions:

len(stack): Find the number of elements in the stack.

not stack: Check if the stack is empty.


Additional List Methods:

clear(): Remove all elements from the stack to make it empty.

copy(): Make a shallow copy of the stack.

count(x): Count the number of occurrences of a specific element x in the stack.

extend(iterable): Append elements from another iterable (e.g., a list) to the stack.

index(x): Find the index of the first occurrence of element x in the stack.

insert(i, x): Insert an element x at a specified index i in the stack.

These functions and methods are used to implement common stack operations, such as push, pop, peek, checking for an empty stack, and more when a list is used to simulate a stack in Python.




